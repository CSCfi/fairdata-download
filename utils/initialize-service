#!/usr/bin/env bash
#--------------------------------------------------------------------------------
# This script is used to configure and manage a local development instance of
# the download service. It should NOT be used in production.
#--------------------------------------------------------------------------------

SCRIPT="$(realpath $0)"
UTILS=`dirname "$SCRIPT"`

source $UTILS/init-dev-script.sh

#--------------------------------------------------------------------------------

cd $ROOT

systemctl --quiet stop fairdata-download       &>/dev/null
systemctl --quiet disable fairdata-download    &>/dev/null
systemctl --quiet stop fairdata-download-generator    &>/dev/null
systemctl --quiet disable fairdata-download-generator &>/dev/null

declare -a FILES=(
    "/etc/nginx/conf.d/fairdata-download.nginx.conf"
    "/usr/lib/systemd/system/fairdata-download.service"
    "/usr/lib/systemd/system/fairdata-download-generator.service"
    "/usr/lib/systemd/system/fairdata-download-generator.service"
    "/usr/lib/systemd/system/fairdata-download.socket"
    "/etc/systemd/system/fairdata-download.service"
    "/etc/systemd/system/fairdata-download-generator.service"
    "/etc/systemd/system/fairdata-download.socket"
    "$ROOT/data/ida-data"
)

for LINK in "${FILES[@]}"; do
    if [ -L $LINK ]; then
        echo "Removing link $LINK"
        rm $LINK
    fi
done

for FILE in "${FILES[@]}"; do
    if [ -f $FILE ]; then
        echo "Removing file $FILE"
        rm $FILE
    fi
done

declare -a DIRS=(
    "$ROOT/data/db"
    "$ROOT/data/download-service-cache"
    "$ROOT/data/ida-data"
    "$ROOT/venv"
    "/var/log/fairdata-download"
    "/run/fairdata-download"
    "/run/fairdata-download-generator"
)

for DIR in "${DIRS[@]}"; do
    if [ -d $DIR ]; then
        echo "Removing directory $DIR"
        rm -fr $DIR
    fi
done

#--------------------------------------------------------------------------------

useradd download || true

$UTILS/initialize-venv
$UTILS/fix-permissions

mkdir -p  /var/log/fairdata-download
chown download:download /var/log/fairdata-download

mkdir -p  $ROOT/data/download-service-cache
chown download:download $ROOT/data/download-service-cache

mkdir -p  $ROOT/data/db
chown download:download $ROOT/data/db

# Ideally the dev instance of the download service is running on the same host as a dev IDA instance,
# and we will access the IDA data storage root, but if not, we'll simply initialize an empty directory
if [ -d /mnt/storage_vol01/ida ]; then
    # TODO make this a read-only local mount
    usermod -a -G apache download
    ln -s /mnt/storage_vol01/ida $ROOT/data/ida-data
else
    mkdir -p  $ROOT/data/ida-data
    chown download:download $ROOT/data/ida-data
fi

ln -s $DEV/fairdata-download.nginx.conf /etc/nginx/conf.d/fairdata-download.nginx.conf
ln -s $DEV/fairdata-download.socket /usr/lib/systemd/system/fairdata-download.socket
ln -s $DEV/fairdata-download.service /usr/lib/systemd/system/fairdata-download.service
ln -s $DEV/fairdata-download-generator.service /usr/lib/systemd/system/fairdata-download-generator.service

$UTILS/initialize-rabbitmq

systemctl daemon-reload

systemctl stop nginx
systemctl start fairdata-download
systemctl start fairdata-download-generator
systemctl start nginx
systemctl enable fairdata-download
systemctl enable fairdata-download-generator
systemctl status -l fairdata-download
systemctl status -l fairdata-download-generator
systemctl status -l nginx

